name: Check builds
on:
  workflow_dispatch:

  pull_request:
  release:
    types: [published]
    
  push:
    branches:
      - main
      - develop
      - dev/*

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled

jobs:
  builds:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, macos-13, macos-12, macos-11, windows-2022, windows-2019]
        compiler:
          - llvm
          - gcc
          - msvc
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Release
          - Debug

        exclude:
          - os: ubuntu-22.04
            compiler: msvc
          - os: ubuntu-20.04
            compiler: msvc
          - os: macos-13
            compiler: msvc
          - os: macos-12
            compiler: msvc
          - os: macos-11
            compiler: msvc

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          cmake: true
          ninja: true
          conan: true
          vcpkg: false
          ccache: true
          cppcheck: true
          gcovr: true
          opencppcoverage: true

      - name: Configure CMake
        run: |
          cmake -S . -B ./build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}}

      - name: Build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build ./build --config ${{matrix.build_type}}

  benchmarks:
    needs: [builds]
    uses: ./.github/workflows/benchmark-and-deploy.yaml
    with:
      branch: ${{ github.ref_name }}
    secrets: inherit
